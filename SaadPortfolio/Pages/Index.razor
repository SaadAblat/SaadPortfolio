@page "/"
@inject IJSRuntime javaScript;
@inject NavigationManager NavigationManager;
<nav>

    <div class="navMenu @navCssClass">
        <div id="halfLeft">
            <div class="fs-medium">Saad.dev </div>
        </div>

        <div class="fs-medium" id="halfRight">

            <a @onclick="(async() => await Activate(NavNames.About))" class="@AboutClass navItem"><div>About </div></a>
            <a @onclick="(async() => await Activate(NavNames.Skills))" class="@SkillsClass navItem"><div>Skills</div></a>
            <a @onclick="(async() => await Activate(NavNames.Projects))" class="@ProjectClass navItem"><div>Projects</div></a>
            <a @onclick="(async() => await Activate(NavNames.Contact))" class="@ContactClass navItem"><div>Contact</div> </a>
        </div>
    </div>
    <i @onclick="toggleMenu" class="fs-medium menu-icon @iconClass  "></i>
        

</nav>




<div id="About">
    <div class="about-row1">
        <div class="image-and-links">
            <img src="/Pictures/ProfilePicture/me.png" width="200"  class="picture-container" />
            <div class="links">
                <a class="contact-link fs-big" href="https://github.com/SaadAblat" target="_blank"><i class="fab fa-github"></i>  </a>
                <a class="contact-link fs-big" href="https://www.linkedin.com/in/saad-ablat-82237816b/" target="_blank"><i class="fab fa-linkedin"></i>  </a>
            </div>
        </div>

        <div class="about-container">

            <div class="fs-huge" id="welcomeMessage">
                C# software engineer
            </div>

            <div class="fs-small" id="description">
                <div>
                    Hi, I'm Saad, I live in Morocco and I create full-stack applications with .Net and C#. I love the process of learning! I also enjoy
                    working out, going for long
                    walks and listening to podcasts.
                </div>
            </div>
            <div class="buttons-about">
                <a href="SaadBio" target="_blank" class="button-link fs-small">Read my bio</a>
                <a download="Ablat-Saad-cv-2023" href="/Files/Resume/Ablat-Saad-cv-2023.jpg" class="button-link fs-small">Download my resume</a>
            </div>




        </div>

        <div class="logos">
            <div id="tech-stack">Tech stack:</div>
            <img class="logo" src="/Pictures/Icons/cs.png" />

            <img class="logo" src="/Pictures/Icons/dotnet.png" />
            <img class="logo" src="/Pictures/Icons/asp.net.png" />
            <img class="logo" src="/Pictures/Icons/Blazor.png" />
            <img class="logo" src="/Pictures/Icons/sql.png" />
            <img class="logo" src="/Pictures/Icons/azure.png" />

            <img class="logo" src="/Pictures/Icons/git.png" />

            <img class="logo" src="/Pictures/Icons/css.png" />
            <img class="logo" src="/Pictures/Icons/html5.png" />
            <img class="logo" src="/Pictures/Icons/javascript.png" />
            <img class="logo" src="/Pictures/Icons/Bootstrap_logo.svg.png" />

            <img class="logo" src="/Pictures/Icons/unity.png" />

        </div>
    </div>




</div>
<div id="Skills" class="section-container ">
    <div class="section-title fs-medium ">SKILLS</div>
    <div class="container-2 ">

        <div class="skills-description-container">
            <div class="skills-description-title fs-Xbig">Full Stack development</div>
            <div class="skills-container fs-small">
                <div class="skill"><div>C#</div></div>
                <div class="skill"><div>.NET Core</div></div>
                <div class="skill"><div>Asp.net Core</div></div>
                <div class="skill"><div>Blazor</div></div>
                <div class="skill"><div>SQL</div></div>
                <div class="skill"><div>Entity Framework Core</div></div>
                <div class="skill"><div>Dapper</div></div>
                <div class="skill"><div>API</div></div>
                <div class="skill"><div>Git</div></div>
                <div class="skill"><div>html5</div></div>
                <div class="skill"><div>css3</div></div>
                <div class="skill"><div>javascript</div></div>
                <div class="skill"><div>Bootsrap</div></div>
            </div>
            <div class="skills-description fs-small">
                I'm proficient in <b>C#</b> and
                <b>.NET Core</b>, including <b>windows forms</b>, <b>Asp.net Core</b>,
                and <b>Blazor</b>.
                I build powerful and scalable full-stack desktop and web applications,
                and have experience creating <b>RESTful</b> and <b>Minimal</b> <b>APIs</b>.
                For data access I have experience with <b>SQL</b>, <b>Entity Framework Core</b>,
                and <b>dapper</b> for robust database design and efficient data retrieval/manipulation.
                Additionally, I'm experienced in <b>HTML5</b>, <b>CSS3</b>, <b>JavaScript</b>, and
                <b>Bootstrap</b> for creating visually appealing and responsive web pages and applications.






            </div>
        </div>
        <div class="skills-description-container">

            <div class="skills-description-title fs-Xbig">Game development</div>
            <div class="skills-container fs-small">
                <div class="skill"><div>C#</div></div>
                <div class="skill"><div>Unity</div></div>
                <div class="skill"><div>Blender</div></div>
                <div class="skill"><div>Photoshop</div></div>
                <div class="skill"><div>Aseprite</div></div>
                <div class="skill"><div>Audacity</div></div>

            </div>
            <div class="skills-description fs-small">
                I've spent 2+ years creating
                games in <b>Unity</b>, and I developed skills
                in writing clean code and building
                efficient editor tools. I can handle
                all sort of tasks like asset import,
                animation, collisions/triggers, game physics,
                UI design, sound effects, and data saving,
                as well as using <b>Blender</b> for 3D models and
                <b>Photoshop</b>/<b>aseprite</b> for sprites and textures.
                I'm confident I can handle anything a
                game dev team needs.
            </div>
        </div>

    </div>

</div>
<div id="Projects" class="section-container">
    <div class="section-title fs-medium">PROJECTS</div>

    <div class="projects-container">
        <div class="project-container column-reverse">
            <div class="project-text-container project-text-container-small">
                <div class="project-title fs-big">Workout tracker website</div>
                <div class="project-description fs-small">
                    This is a <b>full-stack</b> workout tracker web app that allows users to create an account,
                    and add details about their workouts. Users can track their progress with charts
                    and tables and connect with friends to stay motivated.
                    I created this project using <b>blazor server</b> along with
                    <b>entity framework core</b> and <b>sql database</b>, <b>Asp.net core identity</b>
                    for users management and azure services for deployement.
                </div>
                <div class="logos">
                    <img class="logo" src="/Pictures/Icons/Blazor.png" />
                    <img class="logo" src="/Pictures/Icons/sql.png" />
                    <img class="logo" src="/Pictures/Icons/azure.png" />
                    <img class="logo" src="/Pictures/Icons/css.png" />
                    <img class="logo" src="/Pictures/Icons/html5.png" />
                    <img class="logo" src="/Pictures/Icons/javascript.png" />

                </div>
                <div class="project-links ">
                    <a href="https://github.com/SaadAblat/WorkoutTrackerApp" target="_blank" class="link"><span class="fs-medium">Code </span>  <i class="fab fa-github fs-big"></i></a>
                    <a href="http://workouttrackerapp.azurewebsites.net/" target="_blank" class="link"><span class="fs-medium">Visit website </span><i class="oi oi-external-link "></i> </a>
                </div>
            </div>
            <div id="carousel-workouts" class="project-picture-container ">
                <div class="carousel carousel-dark slide" data-ride="carousel">
                    <div class="carousel-inner">

                        @foreach (var image in workoutImages)
                        {
                            <div class="carousel-item @image.isActive">
                                <img src="@image.imageSource" class="project-picture text-center" />
                            </div>
                        }
                    </div>

                    <a class="carousel-control-prev" @onclick=" (() => NextPicture(workoutImages))" role="button">
                        <span class="carousel-control-prev-icon text-black" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>

                    <a class="carousel-control-next" @onclick="(()=>PrevPicture(workoutImages))" role="button">
                        <span class="carousel-control-next-icon " aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>

                </div>

            </div>
        </div>
        <div class="project-container">



            <div  class="project-picture-container"> 


                <div id="carousel-torunaments" class="carousel carousel-dark slide" data-ride="carousel">
                    <div class="carousel-inner">

                    @foreach(var image in tournamentImages)
                    {
                        <div class="carousel-item @image.isActive">
                            <img src="@image.imageSource" class="project-picture" />
                        </div>
                    }
                    </div>

                    <a class="carousel-control-prev" @onclick=" (() => NextPicture(tournamentImages))" role="button">
                        <span class="carousel-control-prev-icon text-black" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>

                    <a class="carousel-control-next" @onclick=" (() => PrevPicture(tournamentImages))" role="button">
                        <span class="carousel-control-next-icon " aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>

                </div>




                
            </div>
            <div class="project-text-container">
                <div class="project-title fs-big">Tournament tracker application</div>
                <div class="project-description fs-small">
                    A <b>C#</b> and <b>Windows Forms</b> application that automates the creation of tournaments.
                    It generates matchups and rounds based on the number of participating teams and
                    has an <b>email</b> notification system to inform participants of important tournament events.
                    The application is <b>highly scalable</b> and can be integrated with both <b>SQL</b> and <b>text databases</b>  .
                </div>
                <div class="logos">
                    <img class="logo" src="/Pictures/Icons/cs.png" />
                    <img class="logo" src="/Pictures/Icons/dotnet.png" />
                    <img class="logo" src="/Pictures/Icons/sql.png" />
                </div>
                <div class="project-links  fs-medium">
                    <a href="https://github.com/SaadAblat/TournamentTracker" target="_blank" class="project-repository  link"><span>Code </span>  <i class="fab fa-github fs-big"></i> </a>
                    
                </div>
            </div>
        </div>
        

    </div>


</div>
<div id="Contact" class="section-container">
    <div class="section-title fs-medium">CONTACT</div>
    <div class="contact-me fs-big">Contact me  👇 : </div>
    <div class="contacts">
        <div class="contact-container">
            <a href="mailto:saad.ablat@gmail.com" class="contact-icon fs-big"><i class="fa-solid fa-envelope-open-text"></i></a>
            <div class="contact-text-container ">
                <div class="email-label fs-medium">Email</div>
                <a href="mailto:saad.ablat@gmail.com" class="email fs-tiny">saad.ablat@gmail.com</a>
            </div>
        </div>
        <div class="contact-container">
            <a href="https://www.linkedin.com/in/saad-ablat-82237816b/" target="_blank" class="contact-icon fs-big"><i class="fab fa-linkedin"></i></a>
            <div class="contact-text-container">
                <div  class="email-label fs-medium">Linkedin</div>
                <a href="https://www.linkedin.com/in/saad-ablat-82237816b/" target="_blank" class="email fs-tiny">linkedin.com/in/saad-ablat-82237816b</a>
            </div>
        </div>
        <div class="contact-container">
            <a href="https://github.com/SaadAblat" target="_blank" class="contact-icon fs-big"><i class="fab fa-github"></i></a>
            <div class="contact-text-container">
                <div class="email-label fs-medium">Github</div>
                <a href="https://github.com/SaadAblat" target="_blank" class="email fs-tiny">github.com/SaadAblat</a>
            </div>
        </div>

    </div>


</div>
<div class="footer">
    <div class="footer-row">

        <div class="footer-text fs-small">Copyright © 2023. All rights are reserved</div>

        <div class="footer-links fs-small">
            <a class="footer-link" href="https://github.com/SaadAblat" target="_blank"><i class="fab fa-github"></i>  </a>
            <a class="footer-link" href="https://www.linkedin.com/in/saad-ablat-82237816b/" target="_blank"><i class="fab fa-linkedin"></i>  </a>
        </div>


    </div>

</div>




@code {
    string AboutClass = "Active";
    string SkillsClass = "NotActive";
    string ProjectClass = "NotActive";
    string ContactClass = "NotActive";




    // This serves as an argument for the methods below;
    enum NavNames
    {
        About,
        Skills,
        Projects,
        Contact
    }
    NavNames navName;

    // This method change the value of the navActive based on the navName passed as an argument
    async Task Activate(NavNames navName)
    {

        closeMenu();


        if (navName == NavNames.About)
        {
            AboutClass = "Active";

            SkillsClass = "NotActive";
            ProjectClass = "NotActive";
            ContactClass = "NotActive";
            await javaScript.InvokeVoidAsync("ScrollTo", "About");

        }
        else if (navName == NavNames.Skills)
        {
            SkillsClass = "Active";

            AboutClass = "NotActive";
            ProjectClass = "NotActive";
            ContactClass = "NotActive";
            await javaScript.InvokeVoidAsync("ScrollTo", "Skills");

        }
        else if (navName == NavNames.Projects)
        {
            ProjectClass = "Active";

            SkillsClass = "NotActive";
            AboutClass = "NotActive";
            ContactClass = "NotActive";

            await javaScript.InvokeVoidAsync("ScrollTo", "Projects");

        }
        else if (navName == NavNames.Contact)
        {
            ContactClass = "Active";

            SkillsClass = "NotActive";
            ProjectClass = "NotActive";
            AboutClass = "NotActive";

            await javaScript.InvokeVoidAsync("ScrollTo", "Contact");

        }
    }

    string navCssClass = "collapse";
    bool navMenuExpanded = false;
    void toggleMenu()
    {

        if (navMenuExpanded == false)
        {

            navCssClass = "";
            iconClass = "fa-solid fa-circle-xmark";
        }
        else
        {

            navCssClass = "collapse";
            iconClass = "oi oi-menu";

        }
        navMenuExpanded = !navMenuExpanded;
    }
    void closeMenu()
    {
        navMenuExpanded = false;
        navCssClass = "collapse";
        iconClass = "oi oi-menu";
    }

    string iconClass = "oi oi-menu";




    //Sliding between images
    class Image
    {
        public string imageSource { get; set; } = "";
        public string isActive { get; set; } = "";
    }
    IList<Image> tournamentImages = new List<Image>
    {
        new Image
        {
            imageSource="/Pictures/Projects/TournamentTracker/TournamentTrackerApplication.png",
            isActive = "active"
        },
        new Image
        {
            imageSource="/Pictures/Projects/TournamentTracker/CreateTeam.png",
            isActive = ""
        },
        new Image
        {
            imageSource="/Pictures/Projects/TournamentTracker/CreateTournament.png",
            isActive = ""
        },
        new Image
        {
            imageSource="/Pictures/Projects/TournamentTracker/Tournament viewer.png",
            isActive = ""
        },
        new Image
        {
            imageSource="/Pictures/Projects/TournamentTracker/CreatePrize.png",
            isActive = ""
        }
    };
    IList<Image> workoutImages = new List<Image>
    {
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/ExercisesDesktop.png",
            isActive = ""
        },
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/workoutsDesktop.png",
            isActive = ""
        },
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/HomePageDesktop.png",
            isActive = ""

        },
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/Home Page.png",
            isActive = "active"

        },
        
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/addfriends.png",
            isActive = ""
        },
        
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/addworkout.png",
            isActive = ""
        },
        
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/LinechartDesktop.png",
            isActive = ""
        },
        new Image
        {
            imageSource="/Pictures/Projects/WorkoutTracker/log.png",
            isActive = ""
        }
        
    };
    void NextPicture(IList<Image> imagesList)
    {
        int currentImage = 0;
        int nextImage = 0;
        for (int i = 0; i < imagesList.Count; i++)
        {
            if (imagesList[i].isActive == "active")
            {
                currentImage = i;
                if (currentImage == imagesList.Count - 1)
                {
                    nextImage = 0;
                }
                else
                {
                    nextImage = currentImage + 1;
                }
            }
        }
        imagesList[currentImage].isActive = "";
        imagesList[nextImage].isActive = "active";

    }
    void PrevPicture(IList<Image> imagesList)
    {
        int currentImage = 0;
        int prevImage = 0;
        for (int i = 0; i < imagesList.Count; i++)
        {
            if (imagesList[i].isActive == "active")
            {

                currentImage = i;
                if (currentImage == 0)
                {
                    prevImage = imagesList.Count - 1;
                }
                else
                {
                    prevImage = currentImage - 1;

                }
            }
        }
        imagesList[currentImage].isActive = "";
        imagesList[prevImage].isActive = "active";
    }



}

@*I learned computer science basics in university,
                        including C, Python, and Matlab. After graduation,
                        I mastered C# through game development in Unity.
                        I then delved deeper into C#, creating different .NET Core projects including
                        desktop applications, ASP.NET Core, and Blazor.*@